//* Функция преобразование базовых чисел в значения rem
@function size(
                $value,         //* Значение
                $_basic: 100,   //* Базовое значение   
                $unit: 'rem'    //* Единица измерения
                ) {
   
    @if not(type-of($_basic) == number) and layout-type() and map-has-key($size-fixed, $_basic) {
        $basic: map-get($size-fixed, $_basic) !global; 
    }
    @else if unitless($_basic){
        $basic: $_basic !global; 
    }
    @else {
        @return null;
    }
    @if unitless($value) {
        @if $unit == 'rem' {
            @return ($value / $basic + rem);
        }
        @else if $unit == 'em' {
            @return ($value / $basic + em);
        }
        @else if $unit == 'vw' {
            @return (($value * 100)/ $basic + vw);
        }        
        @else if $unit == 'number' {
            @return ($value / $basic);
        }
    }
    @else  {
        @warn '$value - only number size(90)';   
    }
}

//* Функция которая возвращает конструкцию, для вывода от меньшего до большего значения в зависимости от ширины экрана пользователя.
//* Зависит от css переменных: --width-max-window, --width-min-window, --width-min-window-px
@function size-clamp($max, $min, $layout: $layout-size ) {
    @if unitless($max) and unitless($min) and unitless($layout) {
        @return calc(#{$min + 'px'} + (#{$max} - #{$min}) * ((var(--width-max-window) - var(--width-min-window-px)) / (#{$layout} - var(--width-min-window))));
    }
    @else {
        @warn '$min, $max - number (500, 40, 1920), units of measurement should not be';
        @return null;
    }
}


//* 
//* Зависимость: size()

@function size-x($value, $name: '1-5') {
    @if map-has-key($size, $name)  {
        @return calc(#{size($value)} * var(--size-#{$name}) );
    }
    @else if $size != (){
        @warn 'error $name $size';
        @return null;   
       
    }
    @else {
        @return null;
    }
}

//* Зависимость: size()
//* 
@function size-a($value, $name: '1-5') {
    @if map-has-key($size-adaptive, $name) {
        @return calc(#{size($value)} * var(--size-a-#{$name}) );
    }
    @else {
        @warn 'error $name $size';
        @return null;
    }
}